Java Editor Code Templates

En : Enumeration
Ex : Exception
Ob : Object
Psf : public static final
Psfb : public static final boolean
Psfi : public static final int
Psfs : public static final String
St : String
ab : abstract
as : assert true;
bcom : /**/
bo : boolean
br : break;
ca : catch (
cl : class
cn : continue
db : double
df : default
dowhile : do {} while (condition);
eq : equals
ex : extends
fa : false
fcom // <editor-fold></editor-fold>
fi : final
fl : float

forc :

for (Iterator it = collection.iterator();

 it.hasNext();) {

 Object elem = (Object) it.next();
 
 }
 
 
 fore :
 
for (Object elem : iterable) { }

fori : for (int i = 0; i < arr.length; i++) {}

forl :

for (int i = 0; i < lst.size(); i++) { Object object = lst.get(i); }

forst :

for (StringTokenizer st = new StringTokenizer(""); st.hasMoreTokens();) }

forv:
for (int i = 0; i < vct.size(); i++) { Object object = vct.elementAt(i);}

fy : finally{ |}
ie : interface
ifelse: if (condition){}else { }
iff : if (exp) {}
im : implements
inst:
if (exp instanceof Object) { Object obj = (Object) exp;

iof : instanceof
ir : import
le : length
na : native
newo : Object name = new Object(args);
pe : protected
pr : private
psf : private static final
psfb : private static final boolean
psfi : private static final int
psfs : private static final String
pst : printStackTrace();
psvm public static void main(String[] args){}
pu : public
re : return
runn : Runnable runnable = new Runnable() { public void run() {}};
serr : System.err.println ("|");
sh : short
sout : System.out.println ("|");
soutv : System.out.println("Object = " + Object);
st : static
su : super
sw : switch (var) { case val: break; default: throw new AssertionError();}
sy : synchronized
tds : Thread.dumpStack();
th : throws
tr : transient
trycatch : try {} catch (Exception e) {}
tw : throw
vo : volatile
wh : while (

whileit:
while (it.hasNext()) { Object elem = (Object) it.next();}

whilen:
while (en.hasMoreElements()) { Object elem = (Object) en.nextElement();}
whilexp : while (exp) {} 




